CREATE TABLE USER_INFO (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LAST_NAME VARCHAR(10) NOT NULL,
  FIRST_NAME VARCHAR(10) NOT NULL,
  PASSWD VARCHAR(512) NOT NULL,
  GENDER ENUM('m', 'f', 'o'),
  SEXUAL_PREFERENCE ENUM('bi', 'hetero', 'homo'),
  BIOGRAPHY VARCHAR(64) NOT NULL DEFAULT '',
  LAST_LOGIN TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  BLOCKED_DATE TIMESTAMP,
  PROFILE_IMG INT UNSIGNED,
  AGE TINYINT UNSIGNED
);

CREATE TABLE EMAIL_LIST (
  USER_ID INT UNSIGNED NOT NULL PRIMARY KEY,
  FOREIGN KEY (USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  EMAIL VARCHAR(128) NOT NULL UNIQUE
);

CREATE TABLE LOGIN_NAME_LIST (
  USER_ID INT UNSIGNED NOT NULL PRIMARY KEY,
  FOREIGN KEY (USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  
  LOGIN_NAME VARCHAR(30) NOT NULL
);

CREATE TABLE TAG_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  TAG_NAME VARCHAR(10) NOT NULL
);

CREATE TABLE USER_TAG_MAPPER (
  USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  TAG_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (TAG_ID)
    REFERENCES TAG_LIST(ID)
    ON DELETE CASCADE,

  PRIMARY KEY (USER_ID, TAG_ID)
);

CREATE TABLE NOTIFY_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  FROM_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (FROM_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  
  TO_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (TO_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  EVENT_NAME ENUM('like', 'unlike', 'visit', 'chat') NOT NULL
);

CREATE TABLE REPORT_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  FROM_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (FROM_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  
  TO_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (TO_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  
  REPORT_DATE TIMESTAMP NOT NULL DEFAULT(CURRENT_TIMESTAMP)
);

CREATE TABLE IMG_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  
  IMG_URL VARCHAR(128) NOT NULL
);

CREATE TABLE ROOM_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  USER1_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (USER1_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  USER2_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (USER2_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE
);

CREATE TABLE MSG_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  ROOM_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (ROOM_ID)
    REFERENCES ROOM_LIST(ID)
    ON DELETE CASCADE,

  MSG VARCHAR(128) NOT NULL,
  FROM_ID INT UNSIGNED NOT NULL,
  SEND_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE LIKE_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  FROM_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (FROM_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  TO_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (TO_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE
);

CREATE TABLE BLOCK_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,

  FROM_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (FROM_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,

  TO_USER_ID INT UNSIGNED NOT NULL,
  FOREIGN KEY (TO_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE
);

CREATE TABLE VISIT_LIST (
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  FROM_USER_ID INT UNSIGNED NOT NULL,
  TO_USER_ID INT UNSIGNED NOT NULL,

  FOREIGN KEY (FROM_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE,
  FOREIGN KEY (TO_USER_ID)
    REFERENCES USER_INFO(ID)
    ON DELETE CASCADE
);

INSERT INTO MATCHA.USER_INFO (last_name, first_name, passwd) VALUES
  ('ham', 'jaewon', '1234'),
  ('kim', 'yeju', '1234');

INSERT INTO MATCHA.EMAIL_LIST (USER_ID, EMAIL) VALUES
  (1, 'jaham@student.42seoul.kr'),
  (2, 'yeju@student.42seoul.kr');

INSERT INTO MATCHA.LOGIN_NAME_LIST (USER_ID, LOGIN_NAME) VALUES
  (1, 'jaham'),
  (2, 'yeju');

INSERT INTO MATCHA.IMG_LIST (USER_ID, IMG_URL) VALUES
  (1, 'small_jaham'),
  (1, 'middle_jaham'),
  (1, 'large_jaham'),
  (2, 'small_yeju'),
  (2, 'middle_yeju'),
  (2, 'large_yeju');

INSERT INTO MATCHA.LIKE_LIST (FROM_USER_ID, TO_USER_ID) VALUES
  (1, 2);

INSERT INTO MATCHA.BLOCK_LIST (FROM_USER_ID, TO_USER_ID) VALUES
  (2, 1);

INSERT INTO MATCHA.TAG_LIST (TAG_NAME) VALUES
  ('game'),
  ('music'),
  ('rock'),
  ('jazz'),
  ('classic'),
  ('pop');

INSERT INTO MATCHA.user_tag_mapper (USER_ID, TAG_ID) VALUES
  (1, 3),
  (1, 5),
  (2, 1),
  (2, 2),
  (2, 3);

INSERT INTO MATCHA.ROOM_LIST (USER1_ID, USER2_ID) VALUES
  (1, 2);

INSERT INTO MATCHA.MSG_LIST (ROOM_ID, MSG, FROM_ID) VALUES
  (1, 'first MSG', '1'),
  (1, 'second MSG', '2'),
  (1, 'third MSG', '1'),
  (1, 'fourth MSG', '1'),
  (1, 'fifth MSG', '2'),
  (1, 'sixth MSG', '2'),
  (1, 'seventh MSG', '1');

-- SELECT u.USER_ID, ui.LOGIN_NAME, t.ID AS tagid, t.TAG_NAME FROM user_tag_mapper AS u
--   LEFT JOIN USER_INFO AS ui ON u.USER_ID = ui.ID
--   LEFT JOIN TAG_LIST AS t ON u.TAG_ID = t.ID;
